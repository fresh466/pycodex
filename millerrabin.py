"""
millerrabin.py: Inspired from 'Witness Numbers (and the truthful 1,662,803)' by Numberphile
Generated by Codex as part of the PyCodex project
"""

import random

def miller_rabin(n, k):
    if n == 2:
        return True
    if not n & 1:
        return False

    def check(a, s, d, n):
        x = pow(a, d, n)
        if x == 1:
            return True
        for i in range(s - 1):
            if x == n - 1:
                return True
            x = pow(x, 2, n)
        return x == n - 1

    s = 0
    d = n - 1

    while d % 2 == 0:
        d >>= 1
        s += 1

    for i in range(k):
        a = random.randrange(2, n - 1)
        if not check(a, s, d, n):
            return False
    return True

def main():
    n = int(input("Enter a number: "))
    if n - 1 == 2:
        print("3 is a prime")
        return False
    if miller_rabin(n, 10):
        print("{} is a prime".format(n))
    else:
        print("{} is not a prime".format(n))

if __name__ == "__main__":
    main()
