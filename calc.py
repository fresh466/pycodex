"""
calc.py: Generated by Codex as part of the PyCodex project
"""

class Calculator:
    def __init__(self):
        self.numbers = []
        self.operators = []
        self.result = 0

    def add(self, num1, num2):
        return num1 + num2

    def subtract(self, num1, num2):
        return num1 - num2

    def multiply(self, num1, num2):
        return num1 * num2

    def divide(self, num1, num2):
        return num1 / num2

    def exponent(self, num1, num2):
        return num1 ** num2

    def modulus(self, num1, num2):
        return num1 % num2

    def calculate(self, num1, num2, operator):
        if operator == '+':
            return self.add(num1, num2)
        elif operator == '-':
            return self.subtract(num1, num2)
        elif operator == '*':
            return self.multiply(num1, num2)
        elif operator == '/':
            return self.divide(num1, num2)
        elif operator == '^':
            return self.exponent(num1, num2)
        elif operator == '%':
            return self.modulus(num1, num2)

    def get_numbers(self):
        while True:
            try:
                num = float(input("Enter a number: "))
                self.numbers.append(num)
            except ValueError:
                break

    def get_operators(self):
        while True:
            operator = input("Enter an operator: ")
            if operator == '+' or operator == '-' or operator == '*' or operator == '/' or operator == '^' or operator == '%':
                self.operators.append(operator)
            else:
                break

    def get_result(self):
        self.result = self.numbers[0]
        for i in range(len(self.operators)):
            self.result = self.calculate(self.result, self.numbers[i+1], self.operators[i])
        print(self.result)


calc = Calculator()
calc.get_numbers()
calc.get_operators()
calc.get_result()
input()
